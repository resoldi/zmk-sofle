#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hl: Homerow_layer {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        change_lang {
            bindings = <&kp LS(SPACE)>;
            key-positions = <27 56>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp C_POWER  &kp N1        &kp N2            &kp N3     &kp N4  &kp N5         &kp LC(UP)     &kp N6        &kp N7         &kp N8     &kp N9             &kp N0           &kp MINUS
&kp ESCAPE   &kp Q         &kp W             &kp E      &kp R   &kp T          &kp LC(DOWN)   &kp Y         &kp U          &kp I      &kp O              &kp P            &kp EQUAL
&kp TAB      &hm LSHIFT A  &kp S             &kp D      &kp F   &kp G          &kp LC(RIGHT)  &kp H         &kp J          &kp K      &kp L              &hm RSHIFT SEMI  &kp APOS
&mo 4        &kp Z         &kp X             &kp C      &kp V   &kp B          &kp LC(LEFT)   &kp N         &kp M          &kp COMMA  &kp DOT            &kp SLASH        &mo 5
&kp C_MUTE   &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LSHFT  &mo 3   &hl 1 SPACE    &kp ENTER      &hl 2 RETURN  &kp BACKSPACE  &mo 3      &kp RIGHT_COMMAND  &mo 5
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "Base";
        };

        Nav {
            bindings = <
&trans       &kp F1     &kp F2     &kp F3     &kp F4     &kp F5       &mmv MOVE_UP     &kp F6        &kp F7         &kp F8        &kp F9         &kp F10    &trans
&trans       &kp LG(Q)  &kp LG(W)  &kp LG(E)  &kp LG(R)  &kp LG(T)    &mmv MOVE_DOWN   &kp PG_UP     &kp HOME       &kp UP        &kp END        &trans     &trans
&kp LS(TAB)  &sk LSHFT  &sk LCTRL  &sk LALT   &sk LGUI   &kp LG(F)    &mmv MOVE_LEFT   &kp CAPSLOCK  &kp LEFT       &kp DOWN      &kp RIGHT      &kp LG(L)  &trans
&trans       &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans       &mmv MOVE_RIGHT  &kp PG_DN     &kp LC(LEFT)   &kp LC(DOWN)  &kp LC(RIGHT)  &trans     &trans
&kp C_MUTE   &trans     &trans     &trans     &trans     &trans       &mkp LCLK        &trans        &kp BACKSPACE  &kp DELETE    &trans         &trans
            >;

            display-name = "Nav";
            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        Sym {
            bindings = <
&trans  &trans     &trans           &trans    &trans        &trans           &trans  &trans     &trans    &trans             &trans     &trans     &trans
&trans  &kp EXCL   &kp AT           &kp HASH  &kp DLLR      &kp PRCNT        &trans  &kp CARET  &kp AMPS  &kp STAR           &kp LPAR   &kp RPAR   &trans
&trans  &sk LSHFT  &sk LCTRL        &sk LALT  &sk LGUI      &kp CARET        &trans  &trans     &kp RGUI  &kp DOUBLE_QUOTES  &kp COLON  &kp RSHFT  &trans
&trans  &kp TILDE  &kp EXCLAMATION  &kp AT    &kp QUESTION  &kp PIPE         &trans  &trans     &trans    &kp LT             &kp GT     &kp QMARK  &trans
&trans  &trans     &trans           &trans    &trans        &kp LS(SPACE)    &trans  &trans     &trans    &trans             &trans     &trans
            >;

            label = "Sym";
        };

        Num {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &out OUT_TOG    &mmv MOVE_UP     &trans   &trans  &trans  &trans    &trans     &trans
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5          &mmv MOVE_DOWN   &kp F11  &kp N7  &kp N8  &kp N9    &kp MINUS  &trans
&trans  &kp LSHFT     &kp LCTRL     &kp LALT      &kp LGUI    &kp EQUAL       &mmv MOVE_LEFT   &kp F12  &kp N4  &kp N5  &kp N6    &kp EQUAL  &trans
&trans  &kp F6        &kp F7        &kp F8        &kp F9      &kp F10         &mmv MOVE_RIGHT  &kp F13  &kp N1  &kp N2  &kp N3    &trans     &trans
&trans  &trans        &trans        &trans        &kp SPACE   &trans          &mkp LCLK        &trans   &trans  &kp N0  &kp LEFT  &kp RIGHT
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Num";
        };

        Mouse {
            bindings = <
&trans  &trans    &trans     &trans    &trans      &trans    &trans  &trans     &trans          &trans          &trans           &trans  &trans
&trans  &trans    &trans     &trans    &trans      &trans    &trans  &trans     &trans          &mmv MOVE_UP    &trans           &trans  &trans
&trans  &kp LALT  &kp LCTRL  &kp LGUI  &kp LSHIFT  &trans    &trans  &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans    &trans     &trans    &trans      &trans    &trans  &trans     &trans          &trans          &trans           &trans  &trans
&trans  &trans    &trans     &trans    &trans      &trans    &trans  &mkp RCLK  &mkp LCLK       &mkp MCLK       &trans           &trans
            >;

            label = "Mouse";
        };

        Button {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans       &trans  &trans     &trans     &trans     &trans     &trans     &trans
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans       &trans  &trans     &kp RG(V)  &kp RG(C)  &kp RG(X)  &kp RG(Z)  &trans
&trans  &kp LALT   &kp LCTRL  &kp LGUI   &kp LSHFT  &trans       &trans  &trans     &kp RSHFT  &kp RGUI   &kp RCTRL  &kp RALT   &trans
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans       &trans  &trans     &kp RG(V)  &kp RG(C)  &kp RG(X)  &kp RG(Z)  &trans
&trans  &trans     &trans     &mkp MCLK  &mkp LCLK  &mkp RCLK    &trans  &mkp RCLK  &mkp LCLK  &mkp MCLK  &trans     &trans
            >;

            label = "Button";
        };

        Media {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans            &trans  &trans             &trans           &trans           &trans           &trans           &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR        &trans  &rgb_ug RGB_TOG    &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans           &trans
&trans  &kp LALT      &kp LCTRL     &kp LGUI      &kp LSHFT     &trans            &trans  &ext_power EP_TOG  &kp C_PREV       &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT       &trans
&trans  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL    &trans  &out OUT_TOG       &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans
&trans  &trans        &trans        &trans        &trans        &trans            &trans  &trans             &trans           &trans           &trans           &trans
            >;

            label = "Media";
        };

        Func {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7     &kp F8      &kp F9     &kp F10      &trans
&trans     &kp F12       &kp F7        &kp F8        &kp F9        &trans          &mmv MOVE_DOWN   &trans  &trans     &trans      &trans     &kp UNDER    &kp PLUS
&trans     &kp F11       &kp F4        &kp F5        &kp F6        &trans          &mmv MOVE_LEFT   &trans  &kp RSHFT  &kp RGUI    &kp RCTRL  &kp RALT     &trans
&trans     &kp F10       &kp F1        &kp F2        &kp F3        &trans          &mmv MOVE_RIGHT  &trans  &trans     &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans        &kp K_APP     &kp SPACE     &kp TAB         &mkp LCLK        &trans  &trans     &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Func";
        };
    };
};
